/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CurrencyRate,
  CurrencyRateInterface,
} from "../../../../dms-osx-artifacts/contracts/currency/CurrencyRate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "SetRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MULTIPLE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NULL_CURRENCY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_symbol1",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol2",
        type: "string",
      },
    ],
    name: "convertCurrency",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "convertCurrencyToPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "convertCurrencyToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertPointToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTokenToPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multiple",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "support",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c611cfd610052600039600081816103930152818161042e01528181610536015281816105cc01526106f30152611cfd6000f3fe6080604052600436106101445760003560e01c80637516a79e116100c0578063e03db9a111610074578063e534682b11610059578063e534682b14610328578063f2fde38b14610348578063f399e22e1461036857610144565b8063e03db9a1146102f3578063e19f47001461031357610144565b80638a42ebe9116100a55780638a42ebe91461028b5780638da5cb5b146102ab57806394cc0b24146102d357610144565b80637516a79e1461025357806388b20f321461026b57610144565b806352d1902d11610117578063693ec85e116100fc578063693ec85e146101fe5780636bd6c6551461021e578063715018a61461023e57610144565b806352d1902d146101d45780635a947642146101e957610144565b80633659cfe614610149578063437a8ae61461016b5780634f1ef2861461019157806351d7ca3d146101a4575b600080fd5b34801561015557600080fd5b5061016961016436600461189a565b610388565b005b34801561017757600080fd5b50633b9aca005b6040519081526020015b60405180910390f35b61016961019f3660046118b4565b61052b565b3480156101b057600080fd5b506101c46101bf366004611a17565b6106ba565b6040519015158152602001610188565b3480156101e057600080fd5b5061017e6106e6565b3480156101f557600080fd5b5061017e6107ab565b34801561020a57600080fd5b5061017e61021936600461198d565b6107cb565b34801561022a57600080fd5b5061017e610239366004611a4a565b610813565b34801561024a57600080fd5b506101696108c6565b34801561025f57600080fd5b5061017e633b9aca0081565b34801561027757600080fd5b5061017e610286366004611a62565b6108da565b34801561029757600080fd5b506101696102a63660046119cd565b6109c4565b3480156102b757600080fd5b506036546040516001600160a01b039091168152602001610188565b3480156102df57600080fd5b5061017e6102ee366004611aac565b610b0f565b3480156102ff57600080fd5b5061017e61030e366004611a4a565b610b8f565b34801561031f57600080fd5b5061017e610bb0565b34801561033457600080fd5b5061017e610343366004611a62565b610bc7565b34801561035457600080fd5b5061016961036336600461189a565b610c9d565b34801561037457600080fd5b50610169610383366004611913565b610d2a565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561042c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146105035760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610423565b61050c81610f1d565b6040805160008082526020820190925261052891839190610f77565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105ca5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610423565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106257f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146106a15760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610423565b6106aa82610f1d565b6106b682826001610f77565b5050565b600080826040516106cb9190611b23565b9081526020016040518091039020546000141590505b919050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107865760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610423565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6040516020015b6040516020818303038152906040528051906020012081565b600061080c83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061112b92505050565b9392505050565b60006108a86002805461082590611c4f565b80601f016020809104026020016040519081016040528092919081815260200182805461085190611c4f565b801561089e5780601f106108735761010080835404028352916020019161089e565b820191906000526020600020905b81548152906001019060200180831161088157829003601f168201915b505050505061112b565b6108b6633b9aca0084611bda565b6108c09190611bba565b92915050565b6108ce6111a2565b6108d860006111fc565b565b60008083836040516020016108f0929190611b3f565b60405160208183030381529060405280519060200120905060405160200161092190626b727760e81b815260030190565b6040516020818303038152906040528051906020012081148061095557506040805160008152602081019182905251902081145b15610963578491505061080c565b633b9aca006109a785858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061112b92505050565b6109b19087611bda565b6109bb9190611bba565b95945050505050565b336001546040517f8b5a59930000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015290911690638b5a59939060240160206040518083038186803b158015610a2357600080fd5b505afa158015610a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5b9190611955565b610aa95760405162461bcd60e51b81526004016104239060208082526004908201527f3130303000000000000000000000000000000000000000000000000000000000604082015260600190565b8160008585604051610abc929190611b3f565b9081526020016040518091039020819055507f75a6a8a0f6c1c0274126e1eebe906b08fd0f0dae80b6fdea749277b9eb5a1903848484604051610b0193929190611b4f565b60405180910390a150505050565b6000610b858686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a01819004810282018101909252888152925088915087908190840183828082843760009201919091525061125b92505050565b9695505050505050565b6000633b9aca00610ba66002805461082590611c4f565b6108b69084611bda565b604051626b727760e81b60208201526023016107b2565b6000610c958484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060028054909250610c129150611c4f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3e90611c4f565b8015610c8b5780601f10610c6057610100808354040283529160200191610c8b565b820191906000526020600020905b815481529060010190602001808311610c6e57829003601f168201915b505050505061125b565b949350505050565b610ca56111a2565b6001600160a01b038116610d215760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610423565b610528816111fc565b600354610100900460ff1615808015610d4a5750600354600160ff909116105b80610d645750303b158015610d64575060035460ff166001145b610dd65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610423565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610e17576003805461ff0019166101001790555b610e1f6113b1565b610e2761142e565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385161790558151610e6290600290602085019061170e565b50633b9aca006000604051610e8090626b727760e81b815260030190565b908152604051908190036020018120919091557f706f696e740000000000000000000000000000000000000000000000000000008152633b9aca0090600090600501908152604051908190036020019020558015610f18576003805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6036546001600160a01b031633146105285760405162461bcd60e51b815260206004820152601360248201527f556e617574686f72697a656420616363657373000000000000000000000000006044820152606401610423565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610faf57610faa836114b4565b610f18565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fe857600080fd5b505afa925050508015611018575060408051601f3d908101601f1916820190925261101591810190611975565b60015b61108a5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610423565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc811461111f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610423565b50610f1883838361157f565b60008060008360405161113e9190611b23565b908152602001604051809103902054905080600014156108c05760405162461bcd60e51b81526004016104239060208082526004908201527f3132313100000000000000000000000000000000000000000000000000000000604082015260600190565b6036546001600160a01b031633146108d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b603680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808360405160200161126f9190611b23565b60405160208183030381529060405280519060200120905060008360405160200161129a9190611b23565b604051602081830303815290604052805190602001209050808214156112c457859250505061080c565b604051626b727760e81b60208201526000906023016040516020818303038152906040528051906020012083148061130d57506040805160008152602081019182905251902083145b61131f5761131a8661112b565b611325565b633b9aca005b9050600060405160200161134290626b727760e81b815260030190565b6040516020818303038152906040528051906020012083148061137657506040805160008152602081019182905251902083145b611388576113838661112b565b61138e565b633b9aca005b90508061139b838a611bda565b6113a59190611bba565b98975050505050505050565b600354610100900460ff166108d85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610423565b600354610100900460ff166114ab5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610423565b6108d8336111fc565b6001600160a01b0381163b6115315760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610423565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b611588836115aa565b6000825111806115955750805b15610f18576115a483836115ea565b50505050565b6115b3816114b4565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061080c8383604051806060016040528060278152602001611ca1602791396060600080856001600160a01b0316856040516116279190611b23565b600060405180830381855af49150503d8060008114611662576040519150601f19603f3d011682016040523d82523d6000602084013e611667565b606091505b5091509150610b8586838387606083156116df5782516116d8576001600160a01b0385163b6116d85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610423565b5081610c95565b610c9583838151156116f45781518083602001fd5b8060405162461bcd60e51b81526004016104239190611b87565b82805461171a90611c4f565b90600052602060002090601f01602090048101928261173c5760008555611782565b82601f1061175557805160ff1916838001178555611782565b82800160010185558215611782579182015b82811115611782578251825591602001919060010190611767565b5061178e929150611792565b5090565b5b8082111561178e5760008155600101611793565b600067ffffffffffffffff808411156117c2576117c2611c8a565b604051601f8501601f19908116603f011681019082821181831017156117ea576117ea611c8a565b8160405280935085815286868601111561180357600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146106e157600080fd5b60008083601f840112611845578182fd5b50813567ffffffffffffffff81111561185c578182fd5b60208301915083602082850101111561187457600080fd5b9250929050565b600082601f83011261188b578081fd5b61080c838335602085016117a7565b6000602082840312156118ab578081fd5b61080c8261181d565b600080604083850312156118c6578081fd5b6118cf8361181d565b9150602083013567ffffffffffffffff8111156118ea578182fd5b8301601f810185136118fa578182fd5b611909858235602084016117a7565b9150509250929050565b60008060408385031215611925578182fd5b61192e8361181d565b9150602083013567ffffffffffffffff811115611949578182fd5b6119098582860161187b565b600060208284031215611966578081fd5b8151801515811461080c578182fd5b600060208284031215611986578081fd5b5051919050565b6000806020838503121561199f578182fd5b823567ffffffffffffffff8111156119b5578283fd5b6119c185828601611834565b90969095509350505050565b6000806000604084860312156119e1578081fd5b833567ffffffffffffffff8111156119f7578182fd5b611a0386828701611834565b909790965060209590950135949350505050565b600060208284031215611a28578081fd5b813567ffffffffffffffff811115611a3e578182fd5b610c958482850161187b565b600060208284031215611a5b578081fd5b5035919050565b600080600060408486031215611a76578283fd5b83359250602084013567ffffffffffffffff811115611a93578283fd5b611a9f86828701611834565b9497909650939450505050565b600080600080600060608688031215611ac3578081fd5b85359450602086013567ffffffffffffffff80821115611ae1578283fd5b611aed89838a01611834565b90965094506040880135915080821115611b05578283fd5b50611b1288828901611834565b969995985093965092949392505050565b60008251611b35818460208701611c23565b9190910192915050565b6000828483379101908152919050565b6000604082528360408301528385606084013780606085840101526060601f19601f8601168301019050826020830152949350505050565b6000602082528251806020840152611ba6816040850160208701611c23565b601f01601f19169190910160400192915050565b600082611bd557634e487b7160e01b81526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c1e57634e487b7160e01b81526011600452602481fd5b500290565b60005b83811015611c3e578181015183820152602001611c26565b838111156115a45750506000910152565b600281046001821680611c6357607f821691505b60208210811415611c8457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208a3640086a6aa58d35b721e0f705867aa4574c284456e20f08db1548619dec4864736f6c63430008020033";

type CurrencyRateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurrencyRateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurrencyRate__factory extends ContractFactory {
  constructor(...args: CurrencyRateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurrencyRate> {
    return super.deploy(overrides || {}) as Promise<CurrencyRate>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurrencyRate {
    return super.attach(address) as CurrencyRate;
  }
  override connect(signer: Signer): CurrencyRate__factory {
    return super.connect(signer) as CurrencyRate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurrencyRateInterface {
    return new utils.Interface(_abi) as CurrencyRateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurrencyRate {
    return new Contract(address, _abi, signerOrProvider) as CurrencyRate;
  }
}
