/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CurrencyRate,
  CurrencyRateInterface,
} from "../../../../dms-osx-artifacts/contracts/currency/CurrencyRate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "SetRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MULTIPLE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NULL_CURRENCY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_symbol1",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol2",
        type: "string",
      },
    ],
    name: "convertCurrency",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "convertCurrencyToPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "convertCurrencyToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertPointToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTokenToPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multiple",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_height",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
        ],
        internalType: "struct ICurrencyRate.CurrencyData[]",
        name: "_data",
        type: "tuple[]",
      },
      {
        internalType: "bytes[]",
        name: "_signatures",
        type: "bytes[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "support",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c612945610052600039600081816103930152818161042e01528181610536015281816105cc01526106f301526129456000f3fe6080604052600436106101445760003560e01c80637516a79e116100c0578063e19f470011610074578063e63f637d11610059578063e63f637d14610328578063f2fde38b14610348578063f399e22e1461036857610144565b8063e19f4700146102f3578063e534682b1461030857610144565b80638da5cb5b116100a55780638da5cb5b1461028b57806394cc0b24146102b3578063e03db9a1146102d357610144565b80637516a79e1461025357806388b20f321461026b57610144565b806352d1902d11610117578063693ec85e116100fc578063693ec85e146101fe5780636bd6c6551461021e578063715018a61461023e57610144565b806352d1902d146101d45780635a947642146101e957610144565b80633659cfe614610149578063437a8ae61461016b5780634f1ef2861461019157806351d7ca3d146101a4575b600080fd5b34801561015557600080fd5b506101696101643660046123a0565b610388565b005b34801561017757600080fd5b50633b9aca005b6040519081526020015b60405180910390f35b61016961019f3660046123ba565b61052b565b3480156101b057600080fd5b506101c46101bf3660046124d3565b6106ba565b6040519015158152602001610188565b3480156101e057600080fd5b5061017e6106e6565b3480156101f557600080fd5b5061017e6107ab565b34801561020a57600080fd5b5061017e610219366004612493565b6107cb565b34801561022a57600080fd5b5061017e610239366004612506565b610813565b34801561024a57600080fd5b506101696108ce565b34801561025f57600080fd5b5061017e633b9aca0081565b34801561027757600080fd5b5061017e610286366004612595565b6108e2565b34801561029757600080fd5b506037546040516001600160a01b039091168152602001610188565b3480156102bf57600080fd5b5061017e6102ce3660046125df565b6109c5565b3480156102df57600080fd5b5061017e6102ee366004612506565b610a45565b3480156102ff57600080fd5b5061017e610a69565b34801561031457600080fd5b5061017e610323366004612595565b610a80565b34801561033457600080fd5b5061016961034336600461251e565b610b56565b34801561035457600080fd5b506101696103633660046123a0565b611476565b34801561037457600080fd5b50610169610383366004612419565b611503565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561042c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146105035760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610423565b61050c816116fb565b6040805160008082526020820190925261052891839190611755565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105ca5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610423565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106257f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146106a15760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610423565b6106aa826116fb565b6106b682826001611755565b5050565b600080826040516106cb919061266f565b9081526020016040518091039020546000141590505b919050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107865760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610423565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6040516020015b6040516020818303038152906040528051906020012081565b600061080c83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061190992505050565b9392505050565b60006108c86108ab6003805461082890612866565b80601f016020809104026020016040519081016040528092919081815260200182805461085490612866565b80156108a15780601f10610876576101008083540402835291602001916108a1565b820191906000526020600020905b81548152906001019060200180831161088457829003601f168201915b5050505050611909565b6108b9633b9aca008561281b565b6108c391906127fb565b611980565b92915050565b6108d661199e565b6108e060006119f8565b565b60008083836040516020016108f892919061268b565b60405160208183030381529060405280519060200120905060405160200161092990626b727760e81b815260030190565b6040516020818303038152906040528051906020012081148061095d57506040805160008152602081019182905251902081145b1561096b578491505061080c565b6109bc633b9aca006109b286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061190992505050565b6108b9908861281b565b95945050505050565b6000610a3b8686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881529250889150879081908401838280828437600092019190915250611a5792505050565b9695505050505050565b60006108c8633b9aca00610a5f6003805461082890612866565b6108b9908561281b565b604051626b727760e81b60208201526023016107b2565b6000610b4e8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060038054909250610acb9150612866565b80601f0160208091040260200160405190810160405280929190818152602001828054610af790612866565b8015610b445780601f10610b1957610100808354040283529160200191610b44565b820191906000526020600020905b815481529060010190602001808311610b2757829003601f168201915b5050505050611a57565b949350505050565b336002546040517f8b5a59930000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015290911690638b5a59939060240160206040518083038186803b158015610bb557600080fd5b505afa158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed919061245b565b610c3b5760405162461bcd60e51b81526004016104239060208082526004908201527f3130303000000000000000000000000000000000000000000000000000000000604082015260600190565b600154861015610c8f5760405162461bcd60e51b81526004016104239060208082526004908201527f3131373100000000000000000000000000000000000000000000000000000000604082015260600190565b600254604080517ffeb8bc8200000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163feb8bc82916004808301926020929190829003018186803b158015610ced57600080fd5b505afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d25919061247b565b905060008111610d795760405162461bcd60e51b81526004016104239060208082526004908201527f3131373200000000000000000000000000000000000000000000000000000000604082015260600190565b80831115610dcb5760405162461bcd60e51b81526004016104239060208082526004908201527f3131373300000000000000000000000000000000000000000000000000000000604082015260600190565b60008567ffffffffffffffff811115610df457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610e1d578160200160208202803683370190505b50905060005b86811015610f0457878782818110610e4b57634e487b7160e01b600052603260045260246000fd5b9050602002810190610e5d91906127c8565b610e6790806127b2565b898984818110610e8757634e487b7160e01b600052603260045260246000fd5b9050602002810190610e9991906127c8565b6020013546604051602001610eb194939291906126bf565b60405160208183030381529060405280519060200120828281518110610ee757634e487b7160e01b600052603260045260246000fd5b602090810291909101015280610efc816128a1565b915050610e23565b50600088825183604051602001610f1d93929190612719565b60408051601f198184030181529190528051602090910120905060008567ffffffffffffffff811115610f6057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f89578160200160208202803683370190505b5090506000805b878110156111a2577f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c859052603c8120611037908b8b85818110610feb57634e487b7160e01b600052603260045260246000fd5b9050602002810190610ffd919061276d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ba692505050565b90506000805b848110156110a157826001600160a01b031686828151811061106f57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316141561108f57600191506110a1565b80611099816128a1565b91505061103d565b508015801561114157506002546040517f8b5a59930000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015290911690638b5a59939060240160206040518083038186803b15801561110957600080fd5b505afa15801561111d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611141919061245b565b1561118d578185858151811061116757634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015283611189816128a1565b9450505b5050808061119a906128a1565b915050610f90565b506111b060036107d06127fb565b856111bd836103e861281b565b6111c791906127fb565b10156112175760405162461bcd60e51b81526004016104239060208082526004908201527f3131373400000000000000000000000000000000000000000000000000000000604082015260600190565b60018b905560005b89811015611375578a8a8281811061124757634e487b7160e01b600052603260045260246000fd5b905060200281019061125991906127c8565b6020013560008c8c8481811061127f57634e487b7160e01b600052603260045260246000fd5b905060200281019061129191906127c8565b61129b90806127b2565b6040516112a992919061268b565b908152604051908190036020019020557f75a6a8a0f6c1c0274126e1eebe906b08fd0f0dae80b6fdea749277b9eb5a19038b8b838181106112fa57634e487b7160e01b600052603260045260246000fd5b905060200281019061130c91906127c8565b61131690806127b2565b8d8d8581811061133657634e487b7160e01b600052603260045260246000fd5b905060200281019061134891906127c8565b6020013560405161135b9392919061269b565b60405180910390a18061136d816128a1565b91505061121f565b50633b9aca00600060405161139390626b727760e81b815260030190565b908152604051908190036020018120919091557f4b525700000000000000000000000000000000000000000000000000000000008152633b9aca0090600090600301908152604051908190036020018120919091557f706f696e740000000000000000000000000000000000000000000000000000008152633b9aca0090600090600501908152604051908190036020018120919091557f504f494e540000000000000000000000000000000000000000000000000000008152633b9aca0090600090600501908152604051908190036020019020555050505050505050505050565b61147e61199e565b6001600160a01b0381166114fa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610423565b610528816119f8565b600454610100900460ff16158080156115235750600454600160ff909116105b8061153d5750303b15801561153d575060045460ff166001145b6115af5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610423565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156115f0576004805461ff0019166101001790555b6115f8611bca565b611600611c47565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038516179055815161163b9060039060208501906121d9565b50633b9aca00600060405161165990626b727760e81b815260030190565b908152604051908190036020018120919091557f706f696e740000000000000000000000000000000000000000000000000000008152633b9aca009060009060050190815260405190819003602001902055600060015580156116f6576004805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6037546001600160a01b031633146105285760405162461bcd60e51b815260206004820152601360248201527f556e617574686f72697a656420616363657373000000000000000000000000006044820152606401610423565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561178d5761178883611ccd565b6116f6565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117c657600080fd5b505afa9250505080156117f6575060408051601f3d908101601f191682019092526117f39181019061247b565b60015b6118685760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610423565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146118fd5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610423565b506116f6838383611d98565b60008060008360405161191c919061266f565b908152602001604051809103902054905080600014156108c85760405162461bcd60e51b81526004016104239060208082526004908201527f3132313100000000000000000000000000000000000000000000000000000000604082015260600190565b6000611990633b9aca00836127fb565b6108c890633b9aca0061281b565b6037546001600160a01b031633146108e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610423565b603780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008083604051602001611a6b919061266f565b604051602081830303815290604052805190602001209050600083604051602001611a96919061266f565b60405160208183030381529060405280519060200120905080821415611ac057859250505061080c565b604051626b727760e81b602082015260009060230160405160208183030381529060405280519060200120831480611b0957506040805160008152602081019182905251902083145b611b1b57611b1686611909565b611b21565b633b9aca005b90506000604051602001611b3e90626b727760e81b815260030190565b60405160208183030381529060405280519060200120831480611b7257506040805160008152602081019182905251902083145b611b8457611b7f86611909565b611b8a565b633b9aca005b9050611b9a816108b9848b61281b565b98975050505050505050565b6000806000611bb58585611dc3565b91509150611bc281611e09565b509392505050565b600454610100900460ff166108e05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610423565b600454610100900460ff16611cc45760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610423565b6108e0336119f8565b6001600160a01b0381163b611d4a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610423565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b611da183611fac565b600082511180611dae5750805b156116f657611dbd8383611fec565b50505050565b600080825160411415611dfa5760208301516040840151606085015160001a611dee87828585612011565b94509450505050611e02565b506000905060025b9250929050565b6000816004811115611e2b57634e487b7160e01b600052602160045260246000fd5b1415611e3657610528565b6001816004811115611e5857634e487b7160e01b600052602160045260246000fd5b1415611ea65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610423565b6002816004811115611ec857634e487b7160e01b600052602160045260246000fd5b1415611f165760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610423565b6003816004811115611f3857634e487b7160e01b600052602160045260246000fd5b14156105285760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610423565b611fb581611ccd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061080c83836040518060600160405280602781526020016128e9602791396120d5565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561204857506000905060036120cc565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561209c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166120c5576000600192509250506120cc565b9150600090505b94509492505050565b6060600080856001600160a01b0316856040516120f2919061266f565b600060405180830381855af49150503d806000811461212d576040519150601f19603f3d011682016040523d82523d6000602084013e612132565b606091505b5091509150610a3b86838387606083156121aa5782516121a3576001600160a01b0385163b6121a35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610423565b5081610b4e565b610b4e83838151156121bf5781518083602001fd5b8060405162461bcd60e51b815260040161042391906126e6565b8280546121e590612866565b90600052602060002090601f016020900481019282612207576000855561224d565b82601f1061222057805160ff191683800117855561224d565b8280016001018555821561224d579182015b8281111561224d578251825591602001919060010190612232565b5061225992915061225d565b5090565b5b80821115612259576000815560010161225e565b600067ffffffffffffffff8084111561228d5761228d6128d2565b604051601f8501601f19908116603f011681019082821181831017156122b5576122b56128d2565b816040528093508581528686860111156122ce57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146106e157600080fd5b60008083601f840112612310578081fd5b50813567ffffffffffffffff811115612327578182fd5b6020830191508360208083028501011115611e0257600080fd5b60008083601f840112612352578182fd5b50813567ffffffffffffffff811115612369578182fd5b602083019150836020828501011115611e0257600080fd5b600082601f830112612391578081fd5b61080c83833560208501612272565b6000602082840312156123b1578081fd5b61080c826122e8565b600080604083850312156123cc578081fd5b6123d5836122e8565b9150602083013567ffffffffffffffff8111156123f0578182fd5b8301601f81018513612400578182fd5b61240f85823560208401612272565b9150509250929050565b6000806040838503121561242b578182fd5b612434836122e8565b9150602083013567ffffffffffffffff81111561244f578182fd5b61240f85828601612381565b60006020828403121561246c578081fd5b8151801515811461080c578182fd5b60006020828403121561248c578081fd5b5051919050565b600080602083850312156124a5578182fd5b823567ffffffffffffffff8111156124bb578283fd5b6124c785828601612341565b90969095509350505050565b6000602082840312156124e4578081fd5b813567ffffffffffffffff8111156124fa578182fd5b610b4e84828501612381565b600060208284031215612517578081fd5b5035919050565b600080600080600060608688031215612535578081fd5b85359450602086013567ffffffffffffffff80821115612553578283fd5b61255f89838a016122ff565b90965094506040880135915080821115612577578283fd5b50612584888289016122ff565b969995985093965092949392505050565b6000806000604084860312156125a9578283fd5b83359250602084013567ffffffffffffffff8111156125c6578283fd5b6125d286828701612341565b9497909650939450505050565b6000806000806000606086880312156125f6578081fd5b85359450602086013567ffffffffffffffff80821115612614578283fd5b61262089838a01612341565b90965094506040880135915080821115612638578283fd5b5061258488828901612341565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6000825161268181846020870161283a565b9190910192915050565b6000828483379101908152919050565b6000604082526126af604083018587612645565b9050826020830152949350505050565b6000606082526126d3606083018688612645565b6020830194909452506040015292915050565b600060208252825180602084015261270581604085016020870161283a565b601f01601f19169190910160400192915050565b60006060820185835260208581850152606060408501528185518084526080860191508287019350845b8181101561275f57845183529383019391830191600101612743565b509098975050505050505050565b6000808335601e19843603018112612783578283fd5b83018035915067ffffffffffffffff82111561279d578283fd5b602001915036819003821315611e0257600080fd5b6000808335601e19843603018112612783578182fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112612681578182fd5b60008261281657634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612835576128356128bc565b500290565b60005b8381101561285557818101518382015260200161283d565b83811115611dbd5750506000910152565b60028104600182168061287a57607f821691505b6020821081141561289b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156128b5576128b56128bc565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fbfade2ff2cb8186b7e9608120982049daaa1679fca1efde19ff683fc41014cc64736f6c63430008020033";

type CurrencyRateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurrencyRateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurrencyRate__factory extends ContractFactory {
  constructor(...args: CurrencyRateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurrencyRate> {
    return super.deploy(overrides || {}) as Promise<CurrencyRate>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CurrencyRate {
    return super.attach(address) as CurrencyRate;
  }
  override connect(signer: Signer): CurrencyRate__factory {
    return super.connect(signer) as CurrencyRate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurrencyRateInterface {
    return new utils.Interface(_abi) as CurrencyRateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurrencyRate {
    return new Contract(address, _abi, signerOrProvider) as CurrencyRate;
  }
}
